function gen_control_variables_txt(controllers_struct)

    filename = 'control_variables.txt';
    pathname = '../Standalone/src/project/varState/';
    fname = fullfile(pathname,filename);

    fid = fopen(fname,'w');
    fprintf(fid,[...
        '%% Definition of the control variables\r\n'...
        '%% For each line: varname , type , size/str_type\r\n'...
        '%%  - varname: name of the variable (without '''' or "")\r\n'...
        '%%  - type: int / double / structure\r\n'...
        '%%      if type == int / double\r\n'...
        '%%          - size/str_type: number of elements in the vector\r\n'...
        '%%               1    :  simple variable\r\n'...
        '%%               n    :  vector of n (n>1) elements\r\n'...
        '%%               [m n]:  tabular of 2 entries with a size m*n \r\n'...
        '%%      if type == structure \r\n'...
        '%%          - size/str_type: the type of the structure (its name without '''' or "")\r\n'...
        '%% indexes start at 0 -> different from ''simu_variables''\r\n'...
        '%%\r\n'...
        '%% Lines starting with %% or // are not taken into account (comments)\r\n'...
        '%% Write the name of each controller as ''# ControllerName'' (without the '''')\r\n'...
        '%% Write the corresponding variables under the ''# ControllerName''\r\n'...
        '%% Do not add another line starting with #\r\n'...
        '%% Keep at least one space between different variables, do not use other signs (, . :)\r\n'...
        '%%\r\n']);
    
    nb_ctrl = size(controllers_struct, 1);
    
    for i=1:nb_ctrl
        controller_name     = controllers_struct{i};
        controller_variable = controllers_struct{nb_ctrl + i};
        nb_var = size(controllers_struct{nb_ctrl + i}, 1);
        
        fprintf(fid, '\r\n# %s\r\n', controller_name);
        
        for j=1:nb_var
            
            if strcmp(controller_variable{nb_var + j},'structure')
                fprintf(fid, '%s   %s   %s\r\n', controller_variable{j}, controller_variable{nb_var + j}, controller_variable{2*nb_var + j});
            else
                if size(controller_variable{2*nb_var + j},2) == 1
                    
                    fprintf(fid, '%s   %s   %d\r\n', controller_variable{j}, controller_variable{nb_var + j}, controller_variable{2*nb_var + j});                    
                
                elseif size(controller_variable{2*nb_var + j},2) == 2
                    
                    two_var = controller_variable{2*nb_var + j};
                    fprintf(fid, '%s   %s   [%d  %d]\r\n', controller_variable{j}, controller_variable{nb_var + j}, two_var(1), two_var(2));
                    
                end
            end                   
        end
    end
    
    fclose(fid);

    fprintf('control_variables.txt created\r\n');

end
