%
%-------------------------------------------------------------
%
%	ROBOTRAN - Version 6.6 (build : february 22, 2008)
%
%	Copyright 
%	Universite catholique de Louvain 
%	Departement de Mecanique 
%	Unite de Production Mecanique et Machines 
%	2, Place du Levant 
%	1348 Louvain-la-Neuve 
%	http://www.robotran.be// 
%
%	==> Generation Date : Thu May  8 10:28:39 2014
%
%	==> Project name : OffRoadRobot
%	==> using XML input file 
%
%	==> Number of joints : 14
%
%	==> Function : F 1 : Direct Dynamics (Semi-Explicit formulation) : RNEA
%	==> Flops complexity : 2571
%
%	==> Generation Time :  0.020 seconds
%	==> Post-Processing :  0.050 seconds
%
%-------------------------------------------------------------
%
function [M,c] = dirdyna(s,tsim,usrfun)

 M = zeros(14,14);
 c = zeros(14,1);

q = s.q; 
qd = s.qd; 
qdd = s.qdd; 
frc = s.frc; 
trq = s.trq; 

% === begin imp_aux === 

% === end imp_aux === 

% ===== BEGIN task 0 ===== 

% = = Block_0_0_0_0_0_1 = = 
 
% Trigonometric Variables  

  C4 = cos(q(4));
  S4 = sin(q(4));
  C5 = cos(q(5));
  S5 = sin(q(5));
  C6 = cos(q(6));
  S6 = sin(q(6));

% = = Block_0_0_0_0_0_2 = = 
 
% Trigonometric Variables  

  C7 = cos(q(7));
  S7 = sin(q(7));
  C8 = cos(q(8));
  S8 = sin(q(8));

% = = Block_0_0_0_0_0_3 = = 
 
% Trigonometric Variables  

  C9 = cos(q(9));
  S9 = sin(q(9));
  C10 = cos(q(10));
  S10 = sin(q(10));

% = = Block_0_0_0_0_0_4 = = 
 
% Trigonometric Variables  

  C11 = cos(q(11));
  S11 = sin(q(11));
  C12 = cos(q(12));
  S12 = sin(q(12));

% = = Block_0_0_0_0_0_5 = = 
 
% Trigonometric Variables  

  C13 = cos(q(13));
  S13 = sin(q(13));
  C14 = cos(q(14));
  S14 = sin(q(14));

% = = Block_0_1_0_0_0_1 = = 
 
% Forward Kinematics 

  AlF24 = -s.g(3)*S4;
  AlF34 = -s.g(3)*C4;
  OM15 = qd(4)*C5;
  OpF15 = -qd(4)*qd(5)*S5;
  OpF35 = qd(4)*qd(5)*C5;
  AlF15 = -AlF34*S5;
  AlF35 = AlF34*C5;
  AlM15_2 = S4*S5;
  AlM35_2 = -S4*C5;
  AlM15_3 = -C4*S5;
  AlM35_3 = C4*C5;
  OM16 = qd(5)*S6+OM15*C6;
  OM26 = qd(5)*C6-OM15*S6;
  OM36 = qd(6)+qd(4)*S5;
  OpF16 = -(qd(6)*OM15*S6-C6*(OpF15+qd(5)*qd(6)));
  OpF26 = -(qd(6)*OM15*C6+S6*(OpF15+qd(5)*qd(6)));
  BS16 = -(OM26*OM26+OM36*OM36);
  BS26 = OM16*OM26;
  BS36 = OM16*OM36;
  BS56 = -(OM16*OM16+OM36*OM36);
  BS66 = OM26*OM36;
  BS96 = -(OM16*OM16+OM26*OM26);
  BeF26 = BS26-OpF35;
  BeF36 = BS36+OpF26;
  BeF46 = BS26+OpF35;
  BeF66 = BS66-OpF16;
  BeF76 = BS36-OpF26;
  BeF86 = BS66+OpF16;
  AlF16 = AlF15*C6+AlF24*S6;
  AlF26 = -(AlF15*S6-AlF24*C6);
  AlM16_1 = C5*C6;
  AlM26_1 = -C5*S6;
  AlM16_2 = AlM15_2*C6+C4*S6;
  AlM26_2 = -(AlM15_2*S6-C4*C6);
  AlM16_3 = AlM15_3*C6+S4*S6;
  AlM26_3 = -(AlM15_3*S6-S4*C6);
  OpM16_4 = C5*C6;
  OpM26_4 = -C5*S6;

% = = Block_0_1_0_1_0_2 = = 
 
% Trigonometric Variables  

  C7p8 = C7*C8-S7*S8;
  S7p8 = C7*S8+S7*C8;
 
% Forward Kinematics 

  OM17 = OM16*C7-OM36*S7;
  OM37 = OM16*S7+OM36*C7;
  AlF17 = C7*(AlF16+BS16*s.dpt(1,1)+BeF26*s.dpt(2,1)+BeF36*s.dpt(3,1))-S7*(AlF35+BS96*s.dpt(3,1)+BeF76*s.dpt(1,1)+BeF86*s.dpt(2,1));
  AlF37 = C7*(AlF35+BS96*s.dpt(3,1)+BeF76*s.dpt(1,1)+BeF86*s.dpt(2,1))+S7*(AlF16+BS16*s.dpt(1,1)+BeF26*s.dpt(2,1)+BeF36*s.dpt(3,1));
  AlM17_1 = AlM16_1*C7-S5*S7;
  AlM37_1 = AlM16_1*S7+S5*C7;
  AlM17_2 = AlM16_2*C7-AlM35_2*S7;
  AlM37_2 = AlM16_2*S7+AlM35_2*C7;
  AlM17_3 = AlM16_3*C7-AlM35_3*S7;
  AlM37_3 = AlM16_3*S7+AlM35_3*C7;
  AlM17_4 = C7*(OpM26_4*s.dpt(3,1)-s.dpt(2,1)*S5)-S7*(OpM16_4*s.dpt(2,1)-OpM26_4*s.dpt(1,1));
  AlM37_4 = C7*(OpM16_4*s.dpt(2,1)-OpM26_4*s.dpt(1,1))+S7*(OpM26_4*s.dpt(3,1)-s.dpt(2,1)*S5);
  AlM17_5 = s.dpt(3,1)*C6*C7+S7*(s.dpt(1,1)*C6-s.dpt(2,1)*S6);
  AlM37_5 = s.dpt(3,1)*C6*S7-C7*(s.dpt(1,1)*C6-s.dpt(2,1)*S6);
  OM18 = OM17*C8-OM37*S8;
  OM28 = qd(7)+qd(8)+OM26;
  OM38 = OM17*S8+OM37*C8;

% = = Block_0_1_0_1_0_3 = = 
 
% Trigonometric Variables  

  C10p9 = C10*C9-S10*S9;
  S10p9 = C10*S9+S10*C9;
 
% Forward Kinematics 

  OM19 = OM16*C9-OM36*S9;
  OM39 = OM16*S9+OM36*C9;
  AlF19 = C9*(AlF16+BS16*s.dpt(1,2)+BeF26*s.dpt(2,2)+BeF36*s.dpt(3,2))-S9*(AlF35+BS96*s.dpt(3,2)+BeF76*s.dpt(1,2)+BeF86*s.dpt(2,2));
  AlF39 = C9*(AlF35+BS96*s.dpt(3,2)+BeF76*s.dpt(1,2)+BeF86*s.dpt(2,2))+S9*(AlF16+BS16*s.dpt(1,2)+BeF26*s.dpt(2,2)+BeF36*s.dpt(3,2));
  AlM19_1 = AlM16_1*C9-S5*S9;
  AlM39_1 = AlM16_1*S9+S5*C9;
  AlM19_2 = AlM16_2*C9-AlM35_2*S9;
  AlM39_2 = AlM16_2*S9+AlM35_2*C9;
  AlM19_3 = AlM16_3*C9-AlM35_3*S9;
  AlM39_3 = AlM16_3*S9+AlM35_3*C9;
  AlM19_4 = C9*(OpM26_4*s.dpt(3,2)-s.dpt(2,2)*S5)-S9*(OpM16_4*s.dpt(2,2)-OpM26_4*s.dpt(1,2));
  AlM39_4 = C9*(OpM16_4*s.dpt(2,2)-OpM26_4*s.dpt(1,2))+S9*(OpM26_4*s.dpt(3,2)-s.dpt(2,2)*S5);
  AlM19_5 = s.dpt(3,2)*C6*C9+S9*(s.dpt(1,2)*C6-s.dpt(2,2)*S6);
  AlM39_5 = s.dpt(3,2)*C6*S9-C9*(s.dpt(1,2)*C6-s.dpt(2,2)*S6);
  OM110 = OM19*C10-OM39*S10;
  OM210 = qd(10)+qd(9)+OM26;
  OM310 = OM19*S10+OM39*C10;

% = = Block_0_1_0_1_0_4 = = 
 
% Trigonometric Variables  

  C11p12 = C11*C12-S11*S12;
  S11p12 = C11*S12+S11*C12;
 
% Forward Kinematics 

  OM111 = OM16*C11-OM36*S11;
  OM311 = OM16*S11+OM36*C11;
  AlF111 = C11*(AlF16+BS16*s.dpt(1,3)+BeF26*s.dpt(2,3)+BeF36*s.dpt(3,3))-S11*(AlF35+BS96*s.dpt(3,3)+BeF76*s.dpt(1,3)+BeF86*s.dpt(2,3));
  AlF311 = C11*(AlF35+BS96*s.dpt(3,3)+BeF76*s.dpt(1,3)+BeF86*s.dpt(2,3))+S11*(AlF16+BS16*s.dpt(1,3)+BeF26*s.dpt(2,3)+BeF36*s.dpt(3,3));
  AlM111_1 = AlM16_1*C11-S11*S5;
  AlM311_1 = AlM16_1*S11+C11*S5;
  AlM111_2 = AlM16_2*C11-AlM35_2*S11;
  AlM311_2 = AlM16_2*S11+AlM35_2*C11;
  AlM111_3 = AlM16_3*C11-AlM35_3*S11;
  AlM311_3 = AlM16_3*S11+AlM35_3*C11;
  AlM111_4 = C11*(OpM26_4*s.dpt(3,3)-s.dpt(2,3)*S5)-S11*(OpM16_4*s.dpt(2,3)-OpM26_4*s.dpt(1,3));
  AlM311_4 = C11*(OpM16_4*s.dpt(2,3)-OpM26_4*s.dpt(1,3))+S11*(OpM26_4*s.dpt(3,3)-s.dpt(2,3)*S5);
  AlM111_5 = s.dpt(3,3)*C11*C6+S11*(s.dpt(1,3)*C6-s.dpt(2,3)*S6);
  AlM311_5 = s.dpt(3,3)*S11*C6-C11*(s.dpt(1,3)*C6-s.dpt(2,3)*S6);
  OM112 = OM111*C12-OM311*S12;
  OM212 = qd(11)+qd(12)+OM26;
  OM312 = OM111*S12+OM311*C12;

% = = Block_0_1_0_1_0_5 = = 
 
% Trigonometric Variables  

  C13p14 = C13*C14-S13*S14;
  S13p14 = C13*S14+S13*C14;
 
% Forward Kinematics 

  OM113 = OM16*C13-OM36*S13;
  OM313 = OM16*S13+OM36*C13;
  AlF113 = C13*(AlF16+BS16*s.dpt(1,4)+BeF26*s.dpt(2,4)+BeF36*s.dpt(3,4))-S13*(AlF35+BS96*s.dpt(3,4)+BeF76*s.dpt(1,4)+BeF86*s.dpt(2,4));
  AlF313 = C13*(AlF35+BS96*s.dpt(3,4)+BeF76*s.dpt(1,4)+BeF86*s.dpt(2,4))+S13*(AlF16+BS16*s.dpt(1,4)+BeF26*s.dpt(2,4)+BeF36*s.dpt(3,4));
  AlM113_1 = AlM16_1*C13-S13*S5;
  AlM313_1 = AlM16_1*S13+C13*S5;
  AlM113_2 = AlM16_2*C13-AlM35_2*S13;
  AlM313_2 = AlM16_2*S13+AlM35_2*C13;
  AlM113_3 = AlM16_3*C13-AlM35_3*S13;
  AlM313_3 = AlM16_3*S13+AlM35_3*C13;
  AlM113_4 = C13*(OpM26_4*s.dpt(3,4)-s.dpt(2,4)*S5)-S13*(OpM16_4*s.dpt(2,4)-OpM26_4*s.dpt(1,4));
  AlM313_4 = C13*(OpM16_4*s.dpt(2,4)-OpM26_4*s.dpt(1,4))+S13*(OpM26_4*s.dpt(3,4)-s.dpt(2,4)*S5);
  AlM113_5 = s.dpt(3,4)*C13*C6+S13*(s.dpt(1,4)*C6-s.dpt(2,4)*S6);
  AlM313_5 = s.dpt(3,4)*S13*C6-C13*(s.dpt(1,4)*C6-s.dpt(2,4)*S6);
  OM114 = OM113*C14-OM313*S14;
  OM214 = qd(13)+qd(14)+OM26;
  OM314 = OM113*S14+OM313*C14;

% = = Block_0_2_0_1_0_2 = = 
 
% Backward Dynamics 

  FA18 = -(s.frc(1,8)-s.m(8)*(AlF17*C8-AlF37*S8+s.l(3,8)*(OpF26+OM18*OM38)));
  FA28 = -(s.frc(2,8)-s.m(8)*(AlF26+BS56*s.dpt(2,1)+BeF46*s.dpt(1,1)+BeF66*s.dpt(3,1)+s.l(3,8)*(OM28*OM38+C8*(qd(8)*OM37-C7*(OpF16-qd(7)*OM36)+S7...
 *(OpF35+qd(7)*OM16))+S8*(qd(8)*OM17+C7*(OpF35+qd(7)*OM16)+S7*(OpF16-qd(7)*OM36)))));
  FA38 = -(s.frc(3,8)-s.m(8)*(AlF17*S8+AlF37*C8-s.l(3,8)*(OM18*OM18+OM28*OM28)));
  CF18 = -(s.trq(1,8)+s.In(5,8)*OM28*OM38+FA28*s.l(3,8));
  CF28 = -(s.trq(2,8)-s.In(5,8)*OpF26-FA18*s.l(3,8));
  CF38 = -(s.trq(3,8)-s.In(5,8)*OM18*OM28);
  FB18_1 = s.m(8)*(AlM17_1*C8-AlM37_1*S8);
  FB28_1 = s.m(8)*AlM26_1;
  FB38_1 = s.m(8)*(AlM17_1*S8+AlM37_1*C8);
  CM18_1 = -FB28_1*s.l(3,8);
  CM28_1 = FB18_1*s.l(3,8);
  FB18_2 = s.m(8)*(AlM17_2*C8-AlM37_2*S8);
  FB28_2 = s.m(8)*AlM26_2;
  FB38_2 = s.m(8)*(AlM17_2*S8+AlM37_2*C8);
  CM18_2 = -FB28_2*s.l(3,8);
  CM28_2 = FB18_2*s.l(3,8);
  FB18_3 = s.m(8)*(AlM17_3*C8-AlM37_3*S8);
  FB28_3 = s.m(8)*AlM26_3;
  FB38_3 = s.m(8)*(AlM17_3*S8+AlM37_3*C8);
  CM18_3 = -FB28_3*s.l(3,8);
  CM28_3 = FB18_3*s.l(3,8);
  FB18_4 = s.m(8)*(AlM17_4*C8-AlM37_4*S8+OpM26_4*s.l(3,8));
  FB28_4 = -s.m(8)*(OpM16_4*s.dpt(3,1)-s.dpt(1,1)*S5+s.l(3,8)*(C8*(OpM16_4*C7-S5*S7)-S8*(OpM16_4*S7+S5*C7)));
  FB38_4 = s.m(8)*(AlM17_4*S8+AlM37_4*C8);
  CM18_4 = -FB28_4*s.l(3,8);
  CM28_4 = s.In(5,8)*OpM26_4+FB18_4*s.l(3,8);
  FB18_5 = s.m(8)*(AlM17_5*C8-AlM37_5*S8+s.l(3,8)*C6);
  FB28_5 = -s.m(8)*S6*(s.dpt(3,1)+s.l(3,8)*C7p8);
  FB38_5 = s.m(8)*(AlM17_5*S8+AlM37_5*C8);
  CM18_5 = -FB28_5*s.l(3,8);
  CM28_5 = s.In(5,8)*C6+FB18_5*s.l(3,8);
  CM28_6 = -s.m(8)*s.dpt(2,1)*s.l(3,8)*C7p8;
  CM28_7 = s.In(5,8)+s.m(8)*s.l(3,8)*s.l(3,8);
  CM28_8 = s.In(5,8)+s.m(8)*s.l(3,8)*s.l(3,8);
  FF7_18 = FA18*C8+FA38*S8;
  FF7_38 = -(FA18*S8-FA38*C8);
  CF7_18 = CF18*C8+CF38*S8;
  CF7_38 = -(CF18*S8-CF38*C8);
  FM71_18 = FB18_1*C8+FB38_1*S8;
  FM71_38 = -(FB18_1*S8-FB38_1*C8);
  CM71_18 = CM18_1*C8;
  CM71_38 = -CM18_1*S8;
  FM72_18 = FB18_2*C8+FB38_2*S8;
  FM72_38 = -(FB18_2*S8-FB38_2*C8);
  CM72_18 = CM18_2*C8;
  CM72_38 = -CM18_2*S8;
  FM73_18 = FB18_3*C8+FB38_3*S8;
  FM73_38 = -(FB18_3*S8-FB38_3*C8);
  CM73_18 = CM18_3*C8;
  CM73_38 = -CM18_3*S8;
  FM74_18 = FB18_4*C8+FB38_4*S8;
  FM74_38 = -(FB18_4*S8-FB38_4*C8);
  CM74_18 = CM18_4*C8;
  CM74_38 = -CM18_4*S8;
  FM75_18 = FB18_5*C8+FB38_5*S8;
  FM75_38 = -(FB18_5*S8-FB38_5*C8);
  CM75_18 = CM18_5*C8;
  CM75_38 = -CM18_5*S8;

% = = Block_0_2_0_1_0_3 = = 
 
% Backward Dynamics 

  FA110 = -(s.frc(1,10)-s.m(10)*(AlF19*C10-AlF39*S10+s.l(3,10)*(OpF26+OM110*OM310)));
  FA210 = -(s.frc(2,10)-s.m(10)*(AlF26+BS56*s.dpt(2,2)+BeF46*s.dpt(1,2)+BeF66*s.dpt(3,2)+s.l(3,10)*(OM210*OM310+C10*(qd(10)*OM39-C9*(OpF16-qd(9)*...
 OM36)+S9*(OpF35+qd(9)*OM16))+S10*(qd(10)*OM19+C9*(OpF35+qd(9)*OM16)+S9*(OpF16-qd(9)*OM36)))));
  FA310 = -(s.frc(3,10)-s.m(10)*(AlF19*S10+AlF39*C10-s.l(3,10)*(OM110*OM110+OM210*OM210)));
  CF110 = -(s.trq(1,10)+s.In(5,10)*OM210*OM310+FA210*s.l(3,10));
  CF210 = -(s.trq(2,10)-s.In(5,10)*OpF26-FA110*s.l(3,10));
  CF310 = -(s.trq(3,10)-s.In(5,10)*OM110*OM210);
  FB110_1 = s.m(10)*(AlM19_1*C10-AlM39_1*S10);
  FB210_1 = s.m(10)*AlM26_1;
  FB310_1 = s.m(10)*(AlM19_1*S10+AlM39_1*C10);
  CM110_1 = -FB210_1*s.l(3,10);
  CM210_1 = FB110_1*s.l(3,10);
  FB110_2 = s.m(10)*(AlM19_2*C10-AlM39_2*S10);
  FB210_2 = s.m(10)*AlM26_2;
  FB310_2 = s.m(10)*(AlM19_2*S10+AlM39_2*C10);
  CM110_2 = -FB210_2*s.l(3,10);
  CM210_2 = FB110_2*s.l(3,10);
  FB110_3 = s.m(10)*(AlM19_3*C10-AlM39_3*S10);
  FB210_3 = s.m(10)*AlM26_3;
  FB310_3 = s.m(10)*(AlM19_3*S10+AlM39_3*C10);
  CM110_3 = -FB210_3*s.l(3,10);
  CM210_3 = FB110_3*s.l(3,10);
  FB110_4 = s.m(10)*(AlM19_4*C10-AlM39_4*S10+OpM26_4*s.l(3,10));
  FB210_4 = -s.m(10)*(OpM16_4*s.dpt(3,2)-s.dpt(1,2)*S5+s.l(3,10)*(C10*(OpM16_4*C9-S5*S9)-S10*(OpM16_4*S9+S5*C9)));
  FB310_4 = s.m(10)*(AlM19_4*S10+AlM39_4*C10);
  CM110_4 = -FB210_4*s.l(3,10);
  CM210_4 = s.In(5,10)*OpM26_4+FB110_4*s.l(3,10);
  FB110_5 = s.m(10)*(AlM19_5*C10-AlM39_5*S10+s.l(3,10)*C6);
  FB210_5 = -s.m(10)*S6*(s.dpt(3,2)+s.l(3,10)*C10p9);
  FB310_5 = s.m(10)*(AlM19_5*S10+AlM39_5*C10);
  CM110_5 = -FB210_5*s.l(3,10);
  CM210_5 = s.In(5,10)*C6+FB110_5*s.l(3,10);
  CM210_6 = -s.m(10)*s.dpt(2,2)*s.l(3,10)*C10p9;
  CM210_9 = s.In(5,10)+s.m(10)*s.l(3,10)*s.l(3,10);
  CM210_10 = s.In(5,10)+s.m(10)*s.l(3,10)*s.l(3,10);
  FF9_110 = FA110*C10+FA310*S10;
  FF9_310 = -(FA110*S10-FA310*C10);
  CF9_110 = CF110*C10+CF310*S10;
  CF9_310 = -(CF110*S10-CF310*C10);
  FM91_110 = FB110_1*C10+FB310_1*S10;
  FM91_310 = -(FB110_1*S10-FB310_1*C10);
  CM91_110 = CM110_1*C10;
  CM91_310 = -CM110_1*S10;
  FM92_110 = FB110_2*C10+FB310_2*S10;
  FM92_310 = -(FB110_2*S10-FB310_2*C10);
  CM92_110 = CM110_2*C10;
  CM92_310 = -CM110_2*S10;
  FM93_110 = FB110_3*C10+FB310_3*S10;
  FM93_310 = -(FB110_3*S10-FB310_3*C10);
  CM93_110 = CM110_3*C10;
  CM93_310 = -CM110_3*S10;
  FM94_110 = FB110_4*C10+FB310_4*S10;
  FM94_310 = -(FB110_4*S10-FB310_4*C10);
  CM94_110 = CM110_4*C10;
  CM94_310 = -CM110_4*S10;
  FM95_110 = FB110_5*C10+FB310_5*S10;
  FM95_310 = -(FB110_5*S10-FB310_5*C10);
  CM95_110 = CM110_5*C10;
  CM95_310 = -CM110_5*S10;

% = = Block_0_2_0_1_0_4 = = 
 
% Backward Dynamics 

  FA112 = -(s.frc(1,12)-s.m(12)*(AlF111*C12-AlF311*S12+s.l(3,12)*(OpF26+OM112*OM312)));
  FA212 = -(s.frc(2,12)-s.m(12)*(AlF26+BS56*s.dpt(2,3)+BeF46*s.dpt(1,3)+BeF66*s.dpt(3,3)+s.l(3,12)*(OM212*OM312+C12*(qd(12)*OM311-C11*(OpF16-...
 qd(11)*OM36)+S11*(OpF35+qd(11)*OM16))+S12*(qd(12)*OM111+C11*(OpF35+qd(11)*OM16)+S11*(OpF16-qd(11)*OM36)))));
  FA312 = -(s.frc(3,12)-s.m(12)*(AlF111*S12+AlF311*C12-s.l(3,12)*(OM112*OM112+OM212*OM212)));
  CF112 = -(s.trq(1,12)+s.In(5,12)*OM212*OM312+FA212*s.l(3,12));
  CF212 = -(s.trq(2,12)-s.In(5,12)*OpF26-FA112*s.l(3,12));
  CF312 = -(s.trq(3,12)-s.In(5,12)*OM112*OM212);
  FB112_1 = s.m(12)*(AlM111_1*C12-AlM311_1*S12);
  FB212_1 = s.m(12)*AlM26_1;
  FB312_1 = s.m(12)*(AlM111_1*S12+AlM311_1*C12);
  CM112_1 = -FB212_1*s.l(3,12);
  CM212_1 = FB112_1*s.l(3,12);
  FB112_2 = s.m(12)*(AlM111_2*C12-AlM311_2*S12);
  FB212_2 = s.m(12)*AlM26_2;
  FB312_2 = s.m(12)*(AlM111_2*S12+AlM311_2*C12);
  CM112_2 = -FB212_2*s.l(3,12);
  CM212_2 = FB112_2*s.l(3,12);
  FB112_3 = s.m(12)*(AlM111_3*C12-AlM311_3*S12);
  FB212_3 = s.m(12)*AlM26_3;
  FB312_3 = s.m(12)*(AlM111_3*S12+AlM311_3*C12);
  CM112_3 = -FB212_3*s.l(3,12);
  CM212_3 = FB112_3*s.l(3,12);
  FB112_4 = s.m(12)*(AlM111_4*C12-AlM311_4*S12+OpM26_4*s.l(3,12));
  FB212_4 = -s.m(12)*(OpM16_4*s.dpt(3,3)-s.dpt(1,3)*S5+s.l(3,12)*(C12*(OpM16_4*C11-S11*S5)-S12*(OpM16_4*S11+C11*S5)));
  FB312_4 = s.m(12)*(AlM111_4*S12+AlM311_4*C12);
  CM112_4 = -FB212_4*s.l(3,12);
  CM212_4 = s.In(5,12)*OpM26_4+FB112_4*s.l(3,12);
  FB112_5 = s.m(12)*(AlM111_5*C12-AlM311_5*S12+s.l(3,12)*C6);
  FB212_5 = -s.m(12)*S6*(s.dpt(3,3)+s.l(3,12)*C11p12);
  FB312_5 = s.m(12)*(AlM111_5*S12+AlM311_5*C12);
  CM112_5 = -FB212_5*s.l(3,12);
  CM212_5 = s.In(5,12)*C6+FB112_5*s.l(3,12);
  CM212_6 = -s.m(12)*s.dpt(2,3)*s.l(3,12)*C11p12;
  CM212_11 = s.In(5,12)+s.m(12)*s.l(3,12)*s.l(3,12);
  CM212_12 = s.In(5,12)+s.m(12)*s.l(3,12)*s.l(3,12);
  FF11_112 = FA112*C12+FA312*S12;
  FF11_312 = -(FA112*S12-FA312*C12);
  CF11_112 = CF112*C12+CF312*S12;
  CF11_312 = -(CF112*S12-CF312*C12);
  FM111_112 = FB112_1*C12+FB312_1*S12;
  FM111_312 = -(FB112_1*S12-FB312_1*C12);
  CM111_112 = CM112_1*C12;
  CM111_312 = -CM112_1*S12;
  FM112_112 = FB112_2*C12+FB312_2*S12;
  FM112_312 = -(FB112_2*S12-FB312_2*C12);
  CM112_112 = CM112_2*C12;
  CM112_312 = -CM112_2*S12;
  FM113_112 = FB112_3*C12+FB312_3*S12;
  FM113_312 = -(FB112_3*S12-FB312_3*C12);
  CM113_112 = CM112_3*C12;
  CM113_312 = -CM112_3*S12;
  FM114_112 = FB112_4*C12+FB312_4*S12;
  FM114_312 = -(FB112_4*S12-FB312_4*C12);
  CM114_112 = CM112_4*C12;
  CM114_312 = -CM112_4*S12;
  FM115_112 = FB112_5*C12+FB312_5*S12;
  FM115_312 = -(FB112_5*S12-FB312_5*C12);
  CM115_112 = CM112_5*C12;
  CM115_312 = -CM112_5*S12;

% = = Block_0_2_0_1_0_5 = = 
 
% Backward Dynamics 

  FA114 = -(s.frc(1,14)-s.m(14)*(AlF113*C14-AlF313*S14+s.l(3,14)*(OpF26+OM114*OM314)));
  FA214 = -(s.frc(2,14)-s.m(14)*(AlF26+BS56*s.dpt(2,4)+BeF46*s.dpt(1,4)+BeF66*s.dpt(3,4)+s.l(3,14)*(OM214*OM314+C14*(qd(14)*OM313-C13*(OpF16-...
 qd(13)*OM36)+S13*(OpF35+qd(13)*OM16))+S14*(qd(14)*OM113+C13*(OpF35+qd(13)*OM16)+S13*(OpF16-qd(13)*OM36)))));
  FA314 = -(s.frc(3,14)-s.m(14)*(AlF113*S14+AlF313*C14-s.l(3,14)*(OM114*OM114+OM214*OM214)));
  CF114 = -(s.trq(1,14)+s.In(5,14)*OM214*OM314+FA214*s.l(3,14));
  CF214 = -(s.trq(2,14)-s.In(5,14)*OpF26-FA114*s.l(3,14));
  CF314 = -(s.trq(3,14)-s.In(5,14)*OM114*OM214);
  FB114_1 = s.m(14)*(AlM113_1*C14-AlM313_1*S14);
  FB214_1 = s.m(14)*AlM26_1;
  FB314_1 = s.m(14)*(AlM113_1*S14+AlM313_1*C14);
  CM114_1 = -FB214_1*s.l(3,14);
  CM214_1 = FB114_1*s.l(3,14);
  FB114_2 = s.m(14)*(AlM113_2*C14-AlM313_2*S14);
  FB214_2 = s.m(14)*AlM26_2;
  FB314_2 = s.m(14)*(AlM113_2*S14+AlM313_2*C14);
  CM114_2 = -FB214_2*s.l(3,14);
  CM214_2 = FB114_2*s.l(3,14);
  FB114_3 = s.m(14)*(AlM113_3*C14-AlM313_3*S14);
  FB214_3 = s.m(14)*AlM26_3;
  FB314_3 = s.m(14)*(AlM113_3*S14+AlM313_3*C14);
  CM114_3 = -FB214_3*s.l(3,14);
  CM214_3 = FB114_3*s.l(3,14);
  FB114_4 = s.m(14)*(AlM113_4*C14-AlM313_4*S14+OpM26_4*s.l(3,14));
  FB214_4 = -s.m(14)*(OpM16_4*s.dpt(3,4)-s.dpt(1,4)*S5+s.l(3,14)*(C14*(OpM16_4*C13-S13*S5)-S14*(OpM16_4*S13+C13*S5)));
  FB314_4 = s.m(14)*(AlM113_4*S14+AlM313_4*C14);
  CM114_4 = -FB214_4*s.l(3,14);
  CM214_4 = s.In(5,14)*OpM26_4+FB114_4*s.l(3,14);
  FB114_5 = s.m(14)*(AlM113_5*C14-AlM313_5*S14+s.l(3,14)*C6);
  FB214_5 = -s.m(14)*S6*(s.dpt(3,4)+s.l(3,14)*C13p14);
  FB314_5 = s.m(14)*(AlM113_5*S14+AlM313_5*C14);
  CM114_5 = -FB214_5*s.l(3,14);
  CM214_5 = s.In(5,14)*C6+FB114_5*s.l(3,14);
  CM214_6 = -s.m(14)*s.dpt(2,4)*s.l(3,14)*C13p14;
  CM214_13 = s.In(5,14)+s.m(14)*s.l(3,14)*s.l(3,14);
  CM214_14 = s.In(5,14)+s.m(14)*s.l(3,14)*s.l(3,14);
  FF13_114 = FA114*C14+FA314*S14;
  FF13_314 = -(FA114*S14-FA314*C14);
  CF13_114 = CF114*C14+CF314*S14;
  CF13_314 = -(CF114*S14-CF314*C14);
  FM131_114 = FB114_1*C14+FB314_1*S14;
  FM131_314 = -(FB114_1*S14-FB314_1*C14);
  CM131_114 = CM114_1*C14;
  CM131_314 = -CM114_1*S14;
  FM132_114 = FB114_2*C14+FB314_2*S14;
  FM132_314 = -(FB114_2*S14-FB314_2*C14);
  CM132_114 = CM114_2*C14;
  CM132_314 = -CM114_2*S14;
  FM133_114 = FB114_3*C14+FB314_3*S14;
  FM133_314 = -(FB114_3*S14-FB314_3*C14);
  CM133_114 = CM114_3*C14;
  CM133_314 = -CM114_3*S14;
  FM134_114 = FB114_4*C14+FB314_4*S14;
  FM134_314 = -(FB114_4*S14-FB314_4*C14);
  CM134_114 = CM114_4*C14;
  CM134_314 = -CM114_4*S14;
  FM135_114 = FB114_5*C14+FB314_5*S14;
  FM135_314 = -(FB114_5*S14-FB314_5*C14);
  CM135_114 = CM114_5*C14;
  CM135_314 = -CM114_5*S14;

% = = Block_0_2_0_2_0_1 = = 
 
% Backward Dynamics 

  FF16 = -(s.frc(1,6)-s.m(6)*AlF16-FF11_112*C11-FF11_312*S11-FF13_114*C13-FF13_314*S13-FF7_18*C7-FF7_38*S7-FF9_110*C9-FF9_310*S9);
  FF26 = -(s.frc(2,6)-FA210-FA212-FA214-FA28-s.m(6)*AlF26);
  FF36 = -(s.frc(3,6)-s.m(6)*AlF35+FF11_112*S11-FF11_312*C11+FF13_114*S13-FF13_314*C13+FF7_18*S7-FF7_38*C7+FF9_110*S9-FF9_310*C9);
  CF16 = -(s.trq(1,6)-s.In(1,6)*OpF16-CF11_112*C11-CF11_312*S11-CF13_114*C13-CF13_314*S13-CF7_18*C7-CF7_38*S7-CF9_110*C9-CF9_310*S9+FA210*...
 s.dpt(3,2)+FA212*s.dpt(3,3)+FA214*s.dpt(3,4)+FA28*s.dpt(3,1)+OM26*OM36*(s.In(5,6)-s.In(9,6))+s.dpt(2,1)*(FF7_18*S7-FF7_38*C7)+s.dpt(2,2)*(FF9_110*S9-...
 FF9_310*C9)+s.dpt(2,3)*(FF11_112*S11-FF11_312*C11)+s.dpt(2,4)*(FF13_114*S13-FF13_314*C13));
  CF26 = -(s.trq(2,6)-CF210-CF212-CF214-CF28-s.In(5,6)*OpF26-OM16*OM36*(s.In(1,6)-s.In(9,6))-s.dpt(1,1)*(FF7_18*S7-FF7_38*C7)-s.dpt(1,2)*(FF9_110...
 *S9-FF9_310*C9)-s.dpt(1,3)*(FF11_112*S11-FF11_312*C11)-s.dpt(1,4)*(FF13_114*S13-FF13_314*C13)-s.dpt(3,1)*(FF7_18*C7+FF7_38*S7)-s.dpt(3,2)*(FF9_110*C9...
 +FF9_310*S9)-s.dpt(3,3)*(FF11_112*C11+FF11_312*S11)-s.dpt(3,4)*(FF13_114*C13+FF13_314*S13));
  CF36 = -(s.trq(3,6)-s.In(9,6)*OpF35+CF11_112*S11-CF11_312*C11+CF13_114*S13-CF13_314*C13+CF7_18*S7-CF7_38*C7+CF9_110*S9-CF9_310*C9-FA210*...
 s.dpt(1,2)-FA212*s.dpt(1,3)-FA214*s.dpt(1,4)-FA28*s.dpt(1,1)+OM16*OM26*(s.In(1,6)-s.In(5,6))+s.dpt(2,1)*(FF7_18*C7+FF7_38*S7)+s.dpt(2,2)*(FF9_110*C9+...
 FF9_310*S9)+s.dpt(2,3)*(FF11_112*C11+FF11_312*S11)+s.dpt(2,4)*(FF13_114*C13+FF13_314*S13));
  FM16_1 = s.m(6)*AlM16_1+FM111_112*C11+FM111_312*S11+FM131_114*C13+FM131_314*S13+FM71_18*C7+FM71_38*S7+FM91_110*C9+FM91_310*S9;
  FM26_1 = FB210_1+FB212_1+FB214_1+FB28_1+s.m(6)*AlM26_1;
  FM36_1 = s.m(6)*S5-FM111_112*S11+FM111_312*C11-FM131_114*S13+FM131_314*C13-FM71_18*S7+FM71_38*C7-FM91_110*S9+FM91_310*C9;
  CM16_1 = CM111_112*C11+CM111_312*S11+CM131_114*C13+CM131_314*S13+CM71_18*C7+CM71_38*S7+CM91_110*C9+CM91_310*S9-FB210_1*s.dpt(3,2)-FB212_1*...
 s.dpt(3,3)-FB214_1*s.dpt(3,4)-FB28_1*s.dpt(3,1)-s.dpt(2,1)*(FM71_18*S7-FM71_38*C7)-s.dpt(2,2)*(FM91_110*S9-FM91_310*C9)-s.dpt(2,3)*(FM111_112*S11-...
 FM111_312*C11)-s.dpt(2,4)*(FM131_114*S13-FM131_314*C13);
  CM26_1 = CM210_1+CM212_1+CM214_1+CM28_1+s.dpt(1,1)*(FM71_18*S7-FM71_38*C7)+s.dpt(1,2)*(FM91_110*S9-FM91_310*C9)+s.dpt(1,3)*(FM111_112*S11-...
 FM111_312*C11)+s.dpt(1,4)*(FM131_114*S13-FM131_314*C13)+s.dpt(3,1)*(FM71_18*C7+FM71_38*S7)+s.dpt(3,2)*(FM91_110*C9+FM91_310*S9)+s.dpt(3,3)*(FM111_112...
 *C11+FM111_312*S11)+s.dpt(3,4)*(FM131_114*C13+FM131_314*S13);
  CM36_1 = -(CM111_112*S11-CM111_312*C11+CM131_114*S13-CM131_314*C13+CM71_18*S7-CM71_38*C7+CM91_110*S9-CM91_310*C9-FB210_1*s.dpt(1,2)-FB212_1*...
 s.dpt(1,3)-FB214_1*s.dpt(1,4)-FB28_1*s.dpt(1,1)+s.dpt(2,1)*(FM71_18*C7+FM71_38*S7)+s.dpt(2,2)*(FM91_110*C9+FM91_310*S9)+s.dpt(2,3)*(FM111_112*C11+...
 FM111_312*S11)+s.dpt(2,4)*(FM131_114*C13+FM131_314*S13));
  FM16_2 = s.m(6)*AlM16_2+FM112_112*C11+FM112_312*S11+FM132_114*C13+FM132_314*S13+FM72_18*C7+FM72_38*S7+FM92_110*C9+FM92_310*S9;
  FM26_2 = FB210_2+FB212_2+FB214_2+FB28_2+s.m(6)*AlM26_2;
  CM16_2 = CM112_112*C11+CM112_312*S11+CM132_114*C13+CM132_314*S13+CM72_18*C7+CM72_38*S7+CM92_110*C9+CM92_310*S9-FB210_2*s.dpt(3,2)-FB212_2*...
 s.dpt(3,3)-FB214_2*s.dpt(3,4)-FB28_2*s.dpt(3,1)-s.dpt(2,1)*(FM72_18*S7-FM72_38*C7)-s.dpt(2,2)*(FM92_110*S9-FM92_310*C9)-s.dpt(2,3)*(FM112_112*S11-...
 FM112_312*C11)-s.dpt(2,4)*(FM132_114*S13-FM132_314*C13);
  CM26_2 = CM210_2+CM212_2+CM214_2+CM28_2+s.dpt(1,1)*(FM72_18*S7-FM72_38*C7)+s.dpt(1,2)*(FM92_110*S9-FM92_310*C9)+s.dpt(1,3)*(FM112_112*S11-...
 FM112_312*C11)+s.dpt(1,4)*(FM132_114*S13-FM132_314*C13)+s.dpt(3,1)*(FM72_18*C7+FM72_38*S7)+s.dpt(3,2)*(FM92_110*C9+FM92_310*S9)+s.dpt(3,3)*(FM112_112...
 *C11+FM112_312*S11)+s.dpt(3,4)*(FM132_114*C13+FM132_314*S13);
  CM36_2 = -(CM112_112*S11-CM112_312*C11+CM132_114*S13-CM132_314*C13+CM72_18*S7-CM72_38*C7+CM92_110*S9-CM92_310*C9-FB210_2*s.dpt(1,2)-FB212_2*...
 s.dpt(1,3)-FB214_2*s.dpt(1,4)-FB28_2*s.dpt(1,1)+s.dpt(2,1)*(FM72_18*C7+FM72_38*S7)+s.dpt(2,2)*(FM92_110*C9+FM92_310*S9)+s.dpt(2,3)*(FM112_112*C11+...
 FM112_312*S11)+s.dpt(2,4)*(FM132_114*C13+FM132_314*S13));
  FM16_3 = s.m(6)*AlM16_3+FM113_112*C11+FM113_312*S11+FM133_114*C13+FM133_314*S13+FM73_18*C7+FM73_38*S7+FM93_110*C9+FM93_310*S9;
  FM26_3 = FB210_3+FB212_3+FB214_3+FB28_3+s.m(6)*AlM26_3;
  CM16_3 = CM113_112*C11+CM113_312*S11+CM133_114*C13+CM133_314*S13+CM73_18*C7+CM73_38*S7+CM93_110*C9+CM93_310*S9-FB210_3*s.dpt(3,2)-FB212_3*...
 s.dpt(3,3)-FB214_3*s.dpt(3,4)-FB28_3*s.dpt(3,1)-s.dpt(2,1)*(FM73_18*S7-FM73_38*C7)-s.dpt(2,2)*(FM93_110*S9-FM93_310*C9)-s.dpt(2,3)*(FM113_112*S11-...
 FM113_312*C11)-s.dpt(2,4)*(FM133_114*S13-FM133_314*C13);
  CM26_3 = CM210_3+CM212_3+CM214_3+CM28_3+s.dpt(1,1)*(FM73_18*S7-FM73_38*C7)+s.dpt(1,2)*(FM93_110*S9-FM93_310*C9)+s.dpt(1,3)*(FM113_112*S11-...
 FM113_312*C11)+s.dpt(1,4)*(FM133_114*S13-FM133_314*C13)+s.dpt(3,1)*(FM73_18*C7+FM73_38*S7)+s.dpt(3,2)*(FM93_110*C9+FM93_310*S9)+s.dpt(3,3)*(FM113_112...
 *C11+FM113_312*S11)+s.dpt(3,4)*(FM133_114*C13+FM133_314*S13);
  CM36_3 = -(CM113_112*S11-CM113_312*C11+CM133_114*S13-CM133_314*C13+CM73_18*S7-CM73_38*C7+CM93_110*S9-CM93_310*C9-FB210_3*s.dpt(1,2)-FB212_3*...
 s.dpt(1,3)-FB214_3*s.dpt(1,4)-FB28_3*s.dpt(1,1)+s.dpt(2,1)*(FM73_18*C7+FM73_38*S7)+s.dpt(2,2)*(FM93_110*C9+FM93_310*S9)+s.dpt(2,3)*(FM113_112*C11+...
 FM113_312*S11)+s.dpt(2,4)*(FM133_114*C13+FM133_314*S13));
  CM16_4 = s.In(1,6)*OpM16_4+CM114_112*C11+CM114_312*S11+CM134_114*C13+CM134_314*S13+CM74_18*C7+CM74_38*S7+CM94_110*C9+CM94_310*S9-FB210_4*...
 s.dpt(3,2)-FB212_4*s.dpt(3,3)-FB214_4*s.dpt(3,4)-FB28_4*s.dpt(3,1)-s.dpt(2,1)*(FM74_18*S7-FM74_38*C7)-s.dpt(2,2)*(FM94_110*S9-FM94_310*C9)-s.dpt(2,3)...
 *(FM114_112*S11-FM114_312*C11)-s.dpt(2,4)*(FM134_114*S13-FM134_314*C13);
  CM26_4 = CM210_4+CM212_4+CM214_4+CM28_4+s.In(5,6)*OpM26_4+s.dpt(1,1)*(FM74_18*S7-FM74_38*C7)+s.dpt(1,2)*(FM94_110*S9-FM94_310*C9)+s.dpt(1,3)*(...
 FM114_112*S11-FM114_312*C11)+s.dpt(1,4)*(FM134_114*S13-FM134_314*C13)+s.dpt(3,1)*(FM74_18*C7+FM74_38*S7)+s.dpt(3,2)*(FM94_110*C9+FM94_310*S9)+...
 s.dpt(3,3)*(FM114_112*C11+FM114_312*S11)+s.dpt(3,4)*(FM134_114*C13+FM134_314*S13);
  CM36_4 = s.In(9,6)*S5-CM114_112*S11+CM114_312*C11-CM134_114*S13+CM134_314*C13-CM74_18*S7+CM74_38*C7-CM94_110*S9+CM94_310*C9+FB210_4*s.dpt(1,2)+...
 FB212_4*s.dpt(1,3)+FB214_4*s.dpt(1,4)+FB28_4*s.dpt(1,1)-s.dpt(2,1)*(FM74_18*C7+FM74_38*S7)-s.dpt(2,2)*(FM94_110*C9+FM94_310*S9)-s.dpt(2,3)*(FM114_112...
 *C11+FM114_312*S11)-s.dpt(2,4)*(FM134_114*C13+FM134_314*S13);
  CM36_5 = -(CM115_112*S11-CM115_312*C11+CM135_114*S13-CM135_314*C13+CM75_18*S7-CM75_38*C7+CM95_110*S9-CM95_310*C9-FB210_5*s.dpt(1,2)-FB212_5*...
 s.dpt(1,3)-FB214_5*s.dpt(1,4)-FB28_5*s.dpt(1,1)+s.dpt(2,1)*(FM75_18*C7+FM75_38*S7)+s.dpt(2,2)*(FM95_110*C9+FM95_310*S9)+s.dpt(2,3)*(FM115_112*C11+...
 FM115_312*S11)+s.dpt(2,4)*(FM135_114*C13+FM135_314*S13));
  CM36_6 = s.In(9,6)+s.m(10)*(s.dpt(1,2)*(s.dpt(1,2)+s.l(3,10)*S10p9)+s.dpt(2,2)*s.dpt(2,2)+s.l(3,10)*S10p9*(s.dpt(1,2)+s.l(3,10)*S10p9))+s.m(12)...
 *(s.dpt(1,3)*(s.dpt(1,3)+s.l(3,12)*S11p12)+s.dpt(2,3)*s.dpt(2,3)+s.l(3,12)*S11p12*(s.dpt(1,3)+s.l(3,12)*S11p12))+s.m(14)*(s.dpt(1,4)*(s.dpt(1,4)+...
 s.l(3,14)*S13p14)+s.dpt(2,4)*s.dpt(2,4)+s.l(3,14)*S13p14*(s.dpt(1,4)+s.l(3,14)*S13p14))+s.m(8)*(s.dpt(1,1)*(s.dpt(1,1)+s.l(3,8)*S7p8)+s.dpt(2,1)*...
 s.dpt(2,1)+s.l(3,8)*S7p8*(s.dpt(1,1)+s.l(3,8)*S7p8));
  FF5_16 = FF16*C6-FF26*S6;
  FF5_26 = FF16*S6+FF26*C6;
  CF5_26 = CF16*S6+CF26*C6;
  FM51_16 = FM16_1*C6-FM26_1*S6;
  FM51_26 = FM16_1*S6+FM26_1*C6;
  CM51_26 = CM16_1*S6+CM26_1*C6;
  FM52_26 = FM16_2*S6+FM26_2*C6;
  CM52_26 = CM16_2*S6+CM26_2*C6;
  CM53_26 = CM16_3*S6+CM26_3*C6;
  CM54_26 = CM16_4*S6+CM26_4*C6;
  CM55_26 = C6*(CM210_5+CM212_5+CM214_5+CM28_5+s.In(5,6)*C6+s.dpt(1,1)*(FM75_18*S7-FM75_38*C7)+s.dpt(1,2)*(FM95_110*S9-FM95_310*C9)+s.dpt(1,3)*(...
 FM115_112*S11-FM115_312*C11)+s.dpt(1,4)*(FM135_114*S13-FM135_314*C13)+s.dpt(3,1)*(FM75_18*C7+FM75_38*S7)+s.dpt(3,2)*(FM95_110*C9+FM95_310*S9)+...
 s.dpt(3,3)*(FM115_112*C11+FM115_312*S11)+s.dpt(3,4)*(FM135_114*C13+FM135_314*S13))+S6*(s.In(1,6)*S6+CM115_112*C11+CM115_312*S11+CM135_114*C13+...
 CM135_314*S13+CM75_18*C7+CM75_38*S7+CM95_110*C9+CM95_310*S9-FB210_5*s.dpt(3,2)-FB212_5*s.dpt(3,3)-FB214_5*s.dpt(3,4)-FB28_5*s.dpt(3,1)-s.dpt(2,1)*(...
 FM75_18*S7-FM75_38*C7)-s.dpt(2,2)*(FM95_110*S9-FM95_310*C9)-s.dpt(2,3)*(FM115_112*S11-FM115_312*C11)-s.dpt(2,4)*(FM135_114*S13-FM135_314*C13));
  FF4_15 = FF36*S5+FF5_16*C5;
  FF4_35 = FF36*C5-FF5_16*S5;
  CF4_15 = CF36*S5+C5*(CF16*C6-CF26*S6);
  FM41_15 = FM36_1*S5+FM51_16*C5;
  FM41_35 = FM36_1*C5-FM51_16*S5;
  CM41_15 = CM36_1*S5+C5*(CM16_1*C6-CM26_1*S6);
  FM42_35 = C5*(s.m(6)*AlM35_2-FM112_112*S11+FM112_312*C11-FM132_114*S13+FM132_314*C13-FM72_18*S7+FM72_38*C7-FM92_110*S9+FM92_310*C9)-S5*(FM16_2*...
 C6-FM26_2*S6);
  CM42_15 = CM36_2*S5+C5*(CM16_2*C6-CM26_2*S6);
  CM43_15 = CM36_3*S5+C5*(CM16_3*C6-CM26_3*S6);
  CM44_15 = CM36_4*S5+C5*(CM16_4*C6-CM26_4*S6);
  FF3_24 = -(FF4_35*S4-FF5_26*C4);
  FF3_34 = FF4_35*C4+FF5_26*S4;
  FM31_24 = -(FM41_35*S4-FM51_26*C4);
  FM31_34 = FM41_35*C4+FM51_26*S4;
  FM32_24 = -(FM42_35*S4-FM52_26*C4);
  FM32_34 = FM42_35*C4+FM52_26*S4;
  FM33_34 = C4*(C5*(s.m(6)*AlM35_3-FM113_112*S11+FM113_312*C11-FM133_114*S13+FM133_314*C13-FM73_18*S7+FM73_38*C7-FM93_110*S9+FM93_310*C9)-S5*(...
 FM16_3*C6-FM26_3*S6))+S4*(FM16_3*S6+FM26_3*C6);

% = = Block_0_3_0_0_0_0 = = 
 
% Symbolic Outputs  

  M(1,1) = FM41_15;
  M(1,2) = FM31_24;
  M(1,3) = FM31_34;
  M(1,4) = CM41_15;
  M(1,5) = CM51_26;
  M(1,6) = CM36_1;
  M(1,7) = CM28_1;
  M(1,8) = CM28_1;
  M(1,9) = CM210_1;
  M(1,10) = CM210_1;
  M(1,11) = CM212_1;
  M(1,12) = CM212_1;
  M(1,13) = CM214_1;
  M(1,14) = CM214_1;
  M(2,1) = FM31_24;
  M(2,2) = FM32_24;
  M(2,3) = FM32_34;
  M(2,4) = CM42_15;
  M(2,5) = CM52_26;
  M(2,6) = CM36_2;
  M(2,7) = CM28_2;
  M(2,8) = CM28_2;
  M(2,9) = CM210_2;
  M(2,10) = CM210_2;
  M(2,11) = CM212_2;
  M(2,12) = CM212_2;
  M(2,13) = CM214_2;
  M(2,14) = CM214_2;
  M(3,1) = FM31_34;
  M(3,2) = FM32_34;
  M(3,3) = FM33_34;
  M(3,4) = CM43_15;
  M(3,5) = CM53_26;
  M(3,6) = CM36_3;
  M(3,7) = CM28_3;
  M(3,8) = CM28_3;
  M(3,9) = CM210_3;
  M(3,10) = CM210_3;
  M(3,11) = CM212_3;
  M(3,12) = CM212_3;
  M(3,13) = CM214_3;
  M(3,14) = CM214_3;
  M(4,1) = CM41_15;
  M(4,2) = CM42_15;
  M(4,3) = CM43_15;
  M(4,4) = CM44_15;
  M(4,5) = CM54_26;
  M(4,6) = CM36_4;
  M(4,7) = CM28_4;
  M(4,8) = CM28_4;
  M(4,9) = CM210_4;
  M(4,10) = CM210_4;
  M(4,11) = CM212_4;
  M(4,12) = CM212_4;
  M(4,13) = CM214_4;
  M(4,14) = CM214_4;
  M(5,1) = CM51_26;
  M(5,2) = CM52_26;
  M(5,3) = CM53_26;
  M(5,4) = CM54_26;
  M(5,5) = CM55_26;
  M(5,6) = CM36_5;
  M(5,7) = CM28_5;
  M(5,8) = CM28_5;
  M(5,9) = CM210_5;
  M(5,10) = CM210_5;
  M(5,11) = CM212_5;
  M(5,12) = CM212_5;
  M(5,13) = CM214_5;
  M(5,14) = CM214_5;
  M(6,1) = CM36_1;
  M(6,2) = CM36_2;
  M(6,3) = CM36_3;
  M(6,4) = CM36_4;
  M(6,5) = CM36_5;
  M(6,6) = CM36_6;
  M(6,7) = CM28_6;
  M(6,8) = CM28_6;
  M(6,9) = CM210_6;
  M(6,10) = CM210_6;
  M(6,11) = CM212_6;
  M(6,12) = CM212_6;
  M(6,13) = CM214_6;
  M(6,14) = CM214_6;
  M(7,1) = CM28_1;
  M(7,2) = CM28_2;
  M(7,3) = CM28_3;
  M(7,4) = CM28_4;
  M(7,5) = CM28_5;
  M(7,6) = CM28_6;
  M(7,7) = CM28_7;
  M(7,8) = CM28_7;
  M(8,1) = CM28_1;
  M(8,2) = CM28_2;
  M(8,3) = CM28_3;
  M(8,4) = CM28_4;
  M(8,5) = CM28_5;
  M(8,6) = CM28_6;
  M(8,7) = CM28_7;
  M(8,8) = CM28_8;
  M(9,1) = CM210_1;
  M(9,2) = CM210_2;
  M(9,3) = CM210_3;
  M(9,4) = CM210_4;
  M(9,5) = CM210_5;
  M(9,6) = CM210_6;
  M(9,9) = CM210_9;
  M(9,10) = CM210_9;
  M(10,1) = CM210_1;
  M(10,2) = CM210_2;
  M(10,3) = CM210_3;
  M(10,4) = CM210_4;
  M(10,5) = CM210_5;
  M(10,6) = CM210_6;
  M(10,9) = CM210_9;
  M(10,10) = CM210_10;
  M(11,1) = CM212_1;
  M(11,2) = CM212_2;
  M(11,3) = CM212_3;
  M(11,4) = CM212_4;
  M(11,5) = CM212_5;
  M(11,6) = CM212_6;
  M(11,11) = CM212_11;
  M(11,12) = CM212_11;
  M(12,1) = CM212_1;
  M(12,2) = CM212_2;
  M(12,3) = CM212_3;
  M(12,4) = CM212_4;
  M(12,5) = CM212_5;
  M(12,6) = CM212_6;
  M(12,11) = CM212_11;
  M(12,12) = CM212_12;
  M(13,1) = CM214_1;
  M(13,2) = CM214_2;
  M(13,3) = CM214_3;
  M(13,4) = CM214_4;
  M(13,5) = CM214_5;
  M(13,6) = CM214_6;
  M(13,13) = CM214_13;
  M(13,14) = CM214_13;
  M(14,1) = CM214_1;
  M(14,2) = CM214_2;
  M(14,3) = CM214_3;
  M(14,4) = CM214_4;
  M(14,5) = CM214_5;
  M(14,6) = CM214_6;
  M(14,13) = CM214_13;
  M(14,14) = CM214_14;
  c(1) = FF4_15;
  c(2) = FF3_24;
  c(3) = FF3_34;
  c(4) = CF4_15;
  c(5) = CF5_26;
  c(6) = CF36;
  c(7) = CF28;
  c(8) = CF28;
  c(9) = CF210;
  c(10) = CF210;
  c(11) = CF212;
  c(12) = CF212;
  c(13) = CF214;
  c(14) = CF214;

% ====== END Task 0 ====== 

  

